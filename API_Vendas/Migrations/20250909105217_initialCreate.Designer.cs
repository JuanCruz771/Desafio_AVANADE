// <auto-generated />
using System;
using Desafio_e_commerce_AVANADE_Vendas.DAO;
using Desafio_e_commerce_AVANADE_Vendas.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Desafio_e_commerce_AVANADE_Vendas.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250909105217_initialCreate")]
    partial class initialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "tipo_usuario", new[] { "admin", "comprador", "vendedor" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Desafio_e_commerce_AVANADE_Vendas.Models.Produtos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo_interno")
                        .HasColumnType("text");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Produtos", (string)null);
                });

            modelBuilder.Entity("Desafio_e_commerce_AVANADE_Vendas.Models.Registro_Vendas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data_Venda")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Endereço_Venda")
                        .HasColumnType("text");

                    b.Property<int>("Id_Comprador")
                        .HasColumnType("integer");

                    b.Property<int>("Id_Produto")
                        .HasColumnType("integer");

                    b.Property<int>("Id_Vendedor")
                        .HasColumnType("integer");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.Property<int>("Status_Venda")
                        .HasColumnType("integer");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.Property<int?>("UsuarioId1")
                        .HasColumnType("integer");

                    b.Property<decimal>("Valor_Total")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("Id_Comprador");

                    b.HasIndex("Id_Produto");

                    b.HasIndex("Id_Vendedor");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("UsuarioId1");

                    b.ToTable("Registro_Venda");
                });

            modelBuilder.Entity("Desafio_e_commerce_AVANADE_Vendas.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Celular")
                        .HasColumnType("text");

                    b.Property<string>("Cpf")
                        .HasColumnType("text");

                    b.Property<DateTime>("Data_Nascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Endereço")
                        .HasColumnType("text");

                    b.Property<string>("Genero")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Senha")
                        .HasColumnType("text");

                    b.Property<Tipo_Usuario>("Tipo")
                        .HasColumnType("tipo_usuario");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Desafio_e_commerce_AVANADE_Vendas.Models.Registro_Vendas", b =>
                {
                    b.HasOne("Desafio_e_commerce_AVANADE_Vendas.Models.Usuario", "Comprador")
                        .WithMany()
                        .HasForeignKey("Id_Comprador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Registro_Vendas_Comprador");

                    b.HasOne("Desafio_e_commerce_AVANADE_Vendas.Models.Produtos", "Produto")
                        .WithMany()
                        .HasForeignKey("Id_Produto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Registro_Vendas_Produtos");

                    b.HasOne("Desafio_e_commerce_AVANADE_Vendas.Models.Usuario", "Vendedor")
                        .WithMany()
                        .HasForeignKey("Id_Vendedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Registro_Vendas_Vendedor");

                    b.HasOne("Desafio_e_commerce_AVANADE_Vendas.Models.Usuario", null)
                        .WithMany("VendasComoComprador")
                        .HasForeignKey("UsuarioId");

                    b.HasOne("Desafio_e_commerce_AVANADE_Vendas.Models.Usuario", null)
                        .WithMany("VendasComoVendedor")
                        .HasForeignKey("UsuarioId1");

                    b.Navigation("Comprador");

                    b.Navigation("Produto");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("Desafio_e_commerce_AVANADE_Vendas.Models.Usuario", b =>
                {
                    b.Navigation("VendasComoComprador");

                    b.Navigation("VendasComoVendedor");
                });
#pragma warning restore 612, 618
        }
    }
}
